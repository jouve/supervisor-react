# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: 
    - master
  pull_request:
    branches:
    - master
jobs:
  fmt:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: 
        - 3.7
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -c py3.txt tox
    - name: Lint with flake8
      run: tox -p -e py37-isort,py37-unify,py37-yapf
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: 
        - 2.7
        - 3.7
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        m=$(python -c 'import sys; print(sys.version_info.major)')
        mm=$m$(python -c 'import sys; print(sys.version_info.minor)')
        python -m pip install --upgrade pip
        pip install -c py$m.txt tox
    - name: Lint
      run: |
        mm=$m$(python -c 'import sys; print("".join([sys.version_info.major, sys.version_info.minor])')
        tox -p -e py$mm-flake8,py$mm-pylint
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: 
        - 2.7
        - 3.7
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        m=$(python -c 'import sys; print(sys.version_info.major)')
        mm=$m$(python -c 'import sys; print(sys.version_info.minor)')
        python -m pip install --upgrade pip
        pip install -c py$m.txt tox
    - name: Test
      run: |
        mm=$m$(python -c 'import sys; print("".join([sys.version_info.major, sys.version_info.minor])')
        tox -e py$mm
